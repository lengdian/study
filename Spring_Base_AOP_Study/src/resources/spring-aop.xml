<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                         http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<context:component-scan base-package="com.hxy.spring_base_aop_study" />

	<!-- 使用AspectJ自动代理 -->
	<aop:aspectj-autoproxy />

	<bean id="aspectOne" class="com.hxy.spring_base_aop_study.aspect.AspectOne"></bean>
	<bean id="xyServiceImpl" class="com.hxy.spring_base_aop_study.ServiceImpl.XYServiceImpl"></bean>

	<!-- 配置切面 -->
	<aop:config>
		<aop:aspect id="aspect1" ref="aspectOne">
			<!-- 配置切入点 -->
			<aop:pointcut
				expression="execution(* com.hxy.spring_base_aop_study.ServiceImpl.*.hxy(..))"
				id="testPointCut" />
			<!-- 使用前置通知 -->
			<aop:before method="before" pointcut-ref="testPointCut" />
			<!-- 环绕通知：该通知所使用的方法第一个参数必须是ProceedingJoinPoint pjp -->
			<aop:around method="around" pointcut-ref="testPointCut" />
			<!-- 带参数的环绕通知 -->
			<aop:around method="aroundWithArgs"
				pointcut="execution(* com.hxy.spring_base_aop_study.ServiceImpl.*.go(String,int))
			    and args(str,i)" />
		</aop:aspect>

		<aop:aspect id="aspect2" ref="aspectOne">
			<!-- '引入'的配置 -->
			<aop:declare-parents types-matching="com.hxy.spring_base_aop_study.ServiceImpl.*"
				implement-interface="com.hxy.spring_base_aop_study.Service.IntService"
				default-impl="com.hxy.spring_base_aop_study.ServiceImpl.IntServiceImpl" />
		</aop:aspect>
	</aop:config>


</beans>